// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    previewFeatures = ["postgresqlExtensions"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
    extensions = [vector]
}

model User {
  id          String   @id @default(cuid())
  emailAddress       String   @unique
  firstName   String?
  lastName    String?
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  credits    Int      @default(150)
  userToProjects UserToProject[]
}

model Project {
  id          String   @id @default(cuid())
   createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String
  repoUrl     String
  deletedAt  DateTime?
  gitHubToken String?
   userToProjects UserToProject[]
  commits     Commit[]
  sourceCodeEmbeddings SourceCodeEmbedding[]
}


model UserToProject {
  id          String   @id @default(cuid())
  userId      String
  projectId   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user        User     @relation(fields: [userId], references: [id])
  project     Project  @relation(fields: [projectId], references: [id])

  @@unique([userId, projectId])
}


model Commit{
  id          String   @id @default(cuid())
 createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
 projectId   String
  project     Project  @relation(fields: [projectId], references: [id])
   commitMessage String
  commitHash   String
  commitAuthorName String
  commitAuthorAvatar String
  commmitDate DateTime
  summary String
}


model SourceCodeEmbedding {
  id          String   @id @default(cuid())
 summaryEmbedding Unsupported("vector(768)")?
  summary String
  sourceCode String
  fileName String
  projectId String
  project Project @relation(fields: [projectId], references: [id])
}